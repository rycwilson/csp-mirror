
function initPromotedStoriesTable () {

  var imageIndex = 0, titleIndex = 1, customerIndex = 2, statusIndex = 3, actionsIndex = 4,
      storyTitleRequirements = "Max 90 characters";

  $('#promoted-stories-table').DataTable({

    ajax: {
      url: '/companies/' + CSP.company.id + '/stories/promoted',
      dataSrc: ''
    },

    dom: 'tp',
    language: {
      emptyTable: 'No Promoted Stories found',
      zeroRecords: 'No Promoted Stories found'
    },
    order: [[ statusIndex, 'asc' ]],

    columns: [
      {
        name: 'ads_images',
        data: 'ads_images',
        render: function (ads_images, type, row, meta) {
          var landscapeImages = ads_images.filter(function (image) {
                                  return image.type === 'LandscapeImage'
                                });
          return '<div class="fileinput">' +
                   '<div class="fileinput-preview thumbnail">' +
                     '<img src="' + (landscapeImages.length ? landscapeImages[0].image_url : '') + '" alt="promoted story image">' +
                   '</div>' +
                   '<input type="file" name="image_url" id="image_url" class="hidden" ' +
                 '</div>';
        }
      },
      {
        name: 'long_headline',
        data: 'ads_long_headline'
      },
      {
        name: 'customer',
        data: 'success.customer.name'
      },
      {
        name: 'status',
        data: 'ads_status',
        render: function (data, type, row, meta) {
          // console.log(data, type, row, meta)
          if (type === 'display') {
            return _.template($('#ads-status-form-template').html())({
                     status: data,
                     storyId: row.id,
                     topicAdId: row.topic_ad.id,
                     retargetAdId: row.retarget_ad.id
                   });
          } else {
            return data;
          }
        }
      },
      // {
      //   name: 'actions',
      //   data: null,
      //   render: function (data, type, row, meta) {
      //     return _.template( $('#promoted-story-actions-dropdown-template').html() )({
      //       viewStoryPath: row.csp_story_path
      //     });
      //   }
      // },
    ],

    columnDefs: [
      {
        // targets: [imageIndex, titleIndex, actionsIndex],
        targets: [imageIndex, titleIndex],
        orderable: false
      },
      {
        // targets: [statusIndex, titleIndex, actionsIndex],
        targets: [statusIndex, titleIndex],
        searchable: false
      },
      { width: '22%', targets: imageIndex },
      { width: '46%', targets: titleIndex },
      { width: '22%', targets: customerIndex },
      { width: '10%', targets: statusIndex },
      // { width: '8%', targets: promoted-story-actions-dropdown-templateIndex },
    ],

    createdRow: function (row, data, index) {
      $(row).attr('data-story-id', data.id);
      $(row).children().eq(0).addClass('promoted-story-images');
      $(row).children().eq(1).addClass('promoted-story-title save-disabled')
                             .attr('data-title', data.title);
      $(row).children().eq(2).addClass('promoted-story-customer');
      $(row).children().eq(3).addClass('status dropdown');

      $(row).css('position', 'relative')
      // $(row).children().eq(4).addClass('actions dropdown');

      // flash errors
      $(row).addClass('position', 'relative')
      $(row).prepend(
        '<td colspan="4" class="flash">' +
          '<div>Sorry, there was an error when updating the Promoted Story</div>' +
        '</td>'
      )
    },
    initComplete: function (settings, json) {
      // console.log('initComplete')
      var $table = $(this),
          initTooltips = function() {
            $table.find('[data-toggle="tooltip"]').tooltip({ container: 'body' });
          },
          initStatusSwitch = function () {
            $('.bs-switch.promote-control').bootstrapSwitch({
              size: 'small',
              onInit: function (e) {}
            });
          },
          initEditorFlash = function () {
            $table.find('td.flash').each(function () {
              $(this).css('height', $(this).parent().css('height'));
            })
          },
          editorFlash = function ($row, res, promotedStory) {
            // console.log(res.error)
            if (res.errors) {
              $row.children().toggle().end()
                  .find('td.flash > div')
                  .addClass('alert alert-danger')
                  .text(res.errors);
              setTimeout(function () {
                $row.find('td.flash > div')
                      .empty()
                      .removeClass('alert alert-danger')
                      .end()
                    .children().toggle();
              }, 2500);

            } else {
              $row.find('td.promoted-story-title')
                  .addClass('alert alert-success')
                  .html(
                    '<i class="fa fa-fw fa-check"></i>&nbsp&nbsp;' +
                    '<span>Updated</span>'
                  )
              setTimeout(function () {
                $row.find('td.promoted-story-title')
                    .empty()
                    .removeClass('alert alert-success')
                    .text(promotedStory.ads_long_headline)
              }, 2500)
            }
          };
      initTooltips();
      initStatusSwitch();  // leave this or there's a delay when init'ing via timeout
      initEditorFlash();
      promotedStoriesEditor = newPromotedStoriesEditor();
      promotedStoriesEditor.on('open', function () {
        $('#DTE_Field_long_headline').attr('maxlength', '<%= RESPONSIVE_AD_LONG_HEADLINE_MAX.to_s %>');
        $('.DTE_Form_Buttons')
          .prepend('<span class="help-block">' + storyTitleRequirements + '</span>');
      });
      promotedStoriesEditor.on('preSubmit', function (e, data, action) {
        // console.log('preSubmit')
        if ($('.DTE_Inline').closest('td').hasClass('save-disabled')) return false;
      });
      promotedStoriesEditor.on('postEdit', function (e, data, rowData) {
        // console.log('postEdit')
      });
      promotedStoriesEditor.on('submitComplete', function (e, res, promotedStory, action) {
        // console.log('submitComplete')
        // this.close();  => apparently happens automatically
        var $table = $(this.s.table),
            dt = $table.DataTable(),
            $row = $table.find('tr[data-story-id="' + promotedStory.id + '"]')

        // the drawType option isn't forcing a re-draw (?), so re-draw the individual row(s)
        // forum discussion: https://datatables.net/forums/discussion/45189
        dt.row($row).data(promotedStory).draw();

        $row.find('td.promoted-story-title').addClass('save-disabled');
        editorFlash($row, res, promotedStory);
      });
      $table.on('draw.dt', initStatusSwitch)
      $table.on('pre-row-reorder.dt', function (e, node, index) {
        console.log('pre-row-reorder')
        console.log(e, node, index)

      })
      $table.css('visibility', 'visible');
    },

  });
}