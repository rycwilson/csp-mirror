
(function () {

  var flashMesg = "<%= @flash_mesg %>",
      flashStatus = "<%= @flash_status %>",
      $table = $('#sponsored-stories-table'),
      $deletedImages = $('.thumbnail.to-be-removed').closest('li.adwords-image'),
      $defaultImage = $('.adwords-default.adwords-image .fileinput-exists img'),
      defaultImageChanged = <%= @default_image_changed %>,
      currentDefaultImageUrl = $defaultImage.attr('src'),
      newDefaultImageUrl = "<%= @company.adwords_images.default.try(:image_url) %>";

  if (defaultImageChanged) {
    console.log('default image changed')
    console.log('current url: ', currentDefaultImageUrl)
    console.log('new url: ', newDefaultImageUrl)
    // uncheck 'make default'
    $('li.adwords-image input[name*="company_default"]').each(
      function () { $(this).prop('checked', false) })
    // swap the current default image with the new default image
    $('li.adwords-image img[src="' + newDefaultImageUrl + '"]')
      .attr('src', currentDefaultImageUrl);
    $defaultImage.attr('src', newDefaultImageUrl)
    // update the table
    // there may be a query string present from refreshing images
    $table.find('img').each(function () {
      if ( $(this).attr('src')
              .match(new RegExp(currentDefaultImageUrl + '(\\?\\d*)?$')) ) {
        $(this).attr('src', newDefaultImageUrl);
      }
    })
  }

  // remove deleted images
  $deletedImages.each(function (index, li) {
    $(this).next().remove();  // hidden input containing adword image id
    $(this).remove();
  })

  // refresh table images - any that have been deleted will have a
  // default background image that points to ADWORDS_IMAGE_PLACEHOLDER_URL
  $table.find('img').each(function() {
    var thisUrl = $(this).attr('src'),
        d = new Date();
    // if there's already a query string, remove it first instead of adding on top of
    $(this).attr('src',
      thisUrl.slice(0, thisUrl.lastIndexOf('?') == -1 ? thisUrl.length : thisUrl.lastIndexOf('?')) + '?' + d.getTime())
  })

  flashDisplay(flashMesg, flashStatus);

}());