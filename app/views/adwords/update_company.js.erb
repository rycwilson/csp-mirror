
(function () {

  var flashMesg = "<%= @flash_mesg %>",
      flashStatus = "<%= @flash_status %>",
      $form = $('#promote-settings-form'),
      $table = $('#promoted-stories-table'),
      $modal = $('#ad-image-select-modal'),
      $removedImages = $('li.adwords-image.to-be-removed'),
      removedImagesStories = <%= raw @removed_images_stories.to_json %> || [],
      swappedDefaultImage = <%= @swapped_default_image %>,
      uploadedDefaultImage = <%= @uploaded_default_image %>,
      defaultImageUrl = "<%= @company.adwords_images.default.image_url %>";

  if (swappedDefaultImage) {
    var $newDefaultImage = $('li.adwords-image img[src="' + defaultImageUrl + '"]'),
        newDefaultImageId = $newDefaultImage.closest('li').next().val(),
        $currentDefaultImage = $('.adwords-default.adwords-image .fileinput-exists img'),
        currentDefaultImageUrl = $currentDefaultImage.attr('src');

    // uncheck 'make default for all
    $('li.adwords-image input[name*="company_default"]').each(
      function () { $(this).prop('checked', false) })

    // swap the current default image with the new default image
    $newDefaultImage.attr('src', currentDefaultImageUrl);
    // update hidden input that contains the AdwordsImage id
    $newDefaultImage.closest('li').next().val($currentDefaultImage.data('id'))

    $currentDefaultImage.attr({
      src: defaultImageUrl,
      // "data-id": newDefaultImageId  // doesn't work!
    });
    // do this instead
    $currentDefaultImage.data('id', newDefaultImageId)

    // update the hidden default image in the list
    $('ul.adwords-images li[class*="hidden"]').next().val(newDefaultImageId)
    $('ul.adwords-images li[class*="hidden"]')
      .find('input[name*="company_default"]')
      .prop('checked', true)
  }

  if (uploadedDefaultImage) {
    // update the table
    // any missing images can be replaced with the new default,
    // as these ads will have had the new default image assigned to them
    // (see company.update_default_adwords_image)
    $table.find('img').each(function () {
      if ( $(this).attr('src') === '' ) {
        $(this).attr('src', defaultImageUrl)
      }
      // old: looking for the old default and replacing it with new
      // if ( $(this).attr('src')
      //         .match(new RegExp(currentDefaultImageUrl + '(\\?\\d*)?$')) ) {
      //   $(this).attr('src', newDefaultImageUrl);
      // }
    })
  }

  if ($removedImages.length) {
    // remove deleted images
    $removedImages.each(function (index, li) {
      // remove images from the image select modal
      $modal.find('li[data-image-id="' + $(this).next().val() + '"]')
            .each( function (index, li) { $(this).remove(); })
      $(this).next().remove();  // hidden input containing adword image id
      $(this).remove();
    })
    // update the table for stories affected by deleted images
    removedImagesStories.forEach(function (imageStory) {
      $table.find('tr[data-story-id="' + imageStory['story_id'] + '"]')
            .each(function (index, tr) {
              $(this).find('img').attr('src', defaultImageUrl)
            } )
    })
  }

  // refresh table images - any that have been deleted will have a
  // default background image that points to ADWORDS_IMAGE_PLACEHOLDER_URL
  // $table.find('img').each(function() {
  //   var thisUrl = $(this).attr('src'),
  //       d = new Date();
  //   // if there's already a query string, remove it first instead of adding on top of
  //   $(this).attr('src',
  //     thisUrl.slice(0, thisUrl.lastIndexOf('?') == -1 ? thisUrl.length : thisUrl.lastIndexOf('?')) + '?' + d.getTime())
  // })

  $form.find('.submit-toggle').toggle();

  flashDisplay(flashMesg, flashStatus);

}());