- is_form_input = image_index.present?

li.ad-image-card {
  class="#{ad_image_card_class_name(ad_image, collection)}"
  data-placeholder-url="#{asset_url(ad_image_placeholder(ad_image[:type]))}"
  data-image-id=(ad_image[:id] if ad_image)
  data-toggle=('popover' unless is_form_input)
  data-ads-target="#{ad_image.present? ? 'imageCard' : (collection == 'images' ? 'newImageCard' : 'newLogoCard')}" }

  - unless is_form_input
    .ad-image-card__frame
      .thumbnail
        img src=ad_image[:image_url] alt="#{ad_image[:type].split(/(?=[A-Z])/)&.join(' ')}"
        .check
          div
            div
            span.fa-stack.fa-lg
              i.fa.fa-circle-o.fa-stack-2x
              i.fa.fa-check.fa-stack-1x

  - else
    - %i(id type image_url).each do |attr|
      input type="hidden" name="company[adwords_images_attributes][#{image_index}][#{attr}]" value=ad_image[attr]
    = check_box_tag( \
        "company[adwords_images_attributes][#{image_index}][default]", 
        ad_image[:default] ? false : true, 
        false, 
        { type: 'hidden', data: { ads_target: 'defaultImageCheckbox' }})
    - unless ad_image[:default]
      = check_box_tag( \
          "company[adwords_images_attributes][#{image_index}][_destroy]", 
          true, 
          false, 
          { type: 'hidden', data: { ads_target: 'destroyImageCheckbox' } })

    .form-group.fileinput.fileinput-exists.has-feedback data-provides="fileinput"

      .ad-image-card__header
        - if ad_image
          - if ad_image[:default]
            // attaching data-trigger attribute to .file-input-preview does not work
            button.btn-upload type="button" data-trigger="fileinput"
              i.fa.fa-fw.fa-upload
          - else
            button.set-as-default type="button" data-action="ads#setAsDefaultImage"
              i.fa.fa-fw.fa-refresh
        |&nbsp;
        button.btn-remove type="button" data-action="ads#deleteImage"
          i.fa.fa-fw.fa-remove
        button.did-save type="button"
          i.fa.fa-fw.fa-check

      .ad-image-card__frame
        .uploading-spinner
          i.fa.fa-spin.fa-circle-o-notch
        .ad-image-card__errors
          i.fa.fa-warning
          .help-block.with-errors
        .fileinput-preview.thumbnail
          = image_tag( \
              ad_image[:image_url] || ad_image_placeholder(ad_image[:type]),
              alt: ad_image[:type]&.split(/(?=[A-Z])/)&.join(' '))
        .btn-file
          input {
            type="file"
            accept="image/jpeg,image/png"
            name="company[adwords_images_attributes][#{image_index}][image_url]"
            data-ads-target=('s3FileInput' if ad_image[:default] || ad_image.blank?)
            data-s3=(s3_direct_post.to_json if ad_image[:default] || ad_image.blank?)
            data-validate="false"
            data-collection="#{collection}"
            data-default-type=(ad_image[:type] if ad_image[:default])
            data-max-file-size="5242880" 
            data-min-dimensions=ad_image_min_dimensions.to_json
            data-aspect-ratio-tolerance=RESPONSIVE_AD_ASPECT_RATIO_TOLERANCE
            data-required-image=('true' if ad_image[:default] && ad_image[:type]&.match(/Image/)) }

      .ad-image-card__footer
        button.btn.btn-sm.btn-default.btn-cancel type="button" data-action="cancelChange" Cancel
        button.btn.btn-sm.btn-danger type="submit" form="gads-form" Delete
        button.btn.btn-sm.btn-success type="submit" form="gads-form"
          div Set as default
          div.spinner
            span 
              i.fa.fa-spin.fa-circle-o-notch