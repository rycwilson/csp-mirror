- ad = form_object if form_object.class.name == 'AdwordsAd'
- is_company_image = form_object.class.name == 'Company'
- enable_file_upload = ad_image[:default] || ad_image[:id].blank?

li.image-card {
  class=("image-card--#{ad_image[:type]}" if ad_image[:type])
  class=('gads-default' if ad_image[:default])
  class=('gads-required' if ad_image[:type] =~ /Image/)
  class=('hidden' if ad_image[:id].blank? && !ad_image[:default])
  class=('selected' if ad.present? && ad.images.include?(ad_image))
  data-image-id=ad_image[:id]
  data-controller="image-card"
  data-image-card-kind-value=ad_image[:type]
  data-image-card-ads-outlet=(form_outlet rescue nil)
  data-ads-target=( \
    ad_image[:default] ? \
      'defaultImageCard' : \
      (ad_image[:id] ? 'imageCard' : "new#{collection == 'images' ? 'Image' : 'Logo'}Card") if is_company_image)
  data-adwords-ad-images-target=('imageCard' if ad.present?)
  data-action=('click->image-card#toggleSelected' if ad.present?)
  data-placeholder-url=(asset_url(ad_image_placeholder(ad_image[:type])) if is_company_image)
  data-toggle=('popover' if ad.present?) }

  - if enable_file_upload
    = render('shared/loading_spinner')

  - if ad.present?
    = check_box_tag( \
        'adwords_ad[adwords_image_ids][]',
        ad_image[:id],
        ad.images.include?(ad_image),
        { class: 'hidden', data: { image_card_target: 'adImageCheckbox' } })
    .image-card__frame
      .thumbnail
        img src=ad_image[:image_url] alt="#{ad_image[:type].split(/(?=[A-Z])/)&.join(' ')}"
        .check
          div
            div
            span.fa-stack.fa-lg
              i.fa.fa-circle-o.fa-stack-2x
              i.fa.fa-check.fa-stack-1x

  - elsif is_company_image

    // new image
    - if ad_image[:id].blank?
      = hidden_field_tag("#{field_name_prefix}[type]", ad_image[:default] ? ad_image[:type] : '')
      = hidden_field_tag("#{field_name_prefix}[image_url]", '', data: { image_card_target: 'imageUrlInput' })
      - if ad_image[:default]
        = hidden_field_tag("#{field_name_prefix}[default]", true, data: { image_card_target: 'defaultInput' })
      
    // existing image
    - else
      = hidden_field_tag("#{field_name_prefix}[id]", ad_image[:id], data: { image_card_target: 'idInput' })
      = hidden_field_tag("#{field_name_prefix}[default]", ad_image[:default], data: { image_card_target: 'defaultInput' })
      - if ad_image[:default]
        = hidden_field_tag("#{field_name_prefix}[type]", ad_image[:type])
        = hidden_field_tag("#{field_name_prefix}[image_url]", ad_image[:image_url], data: { image_card_target: 'imageUrlInput' })
      - else
        = hidden_field_tag("#{field_name_prefix}[_destroy]", false, data: { image_card_target: '_destroyInput' })

    .form-group.fileinput.fileinput-new data-provides="fileinput" data-image-card-target="formGroup"

      .image-card__header
        - if ad_image[:default]
          / attaching data-trigger attribute to .fileinput-preview does not work
          button.btn-upload type="button" data-trigger="fileinput"
            i.fa.fa-fw.fa-upload
        - elsif ad_image[:id]
          button.set-as-default type="button" data-action="image-card#makeDefault"
            i.fa.fa-fw.fa-refresh
          |&nbsp;
          button.btn-remove type="button" data-action="image-card#deleteImage"
            i.fa.fa-fw.fa-remove
        |&nbsp;
        button.btn-remove type="button" data-dismiss="fileinput"
          i.fa.fa-fw.fa-remove

      .image-card__frame
        .image-card__errors
          i.fa.fa-warning
          .help-block.with-errors
        - if ad_image[:default]
          .fileinput-new.thumbnail
            img { 
              src="#{ad_image[:image_url] or ad_image_placeholder(ad_image[:type])}"
              alt=ad_image[:type].split(/(?=[A-Z])/)&.join(' ') }
          .fileinput-preview.fileinput-exists.thumbnail data-image-card-target="preview"
        - elsif ad_image[:id]
          .thumbnail
            img src=ad_image[:image_url] alt="#{ad_image[:type].split(/(?=[A-Z])/)&.join(' ')}"
        - else
          .fileinput-preview.fileinput-exists.thumbnail data-image-card-target="preview"
        .btn-file
          input {
            type="file"
            accept="image/jpeg,image/png"
            data-image-card-target="fileInput"
            data-s3=(s3_direct_post.to_json if enable_file_upload)
            data-validate="false"
            data-collection=collection
            data-max-file-size="5242880" 
            data-min-dimensions=ad_image_min_dimensions.to_json
            data-aspect-ratio-tolerance=RESPONSIVE_AD_ASPECT_RATIO_TOLERANCE
            data-required-image=('true' if ad_image[:default] && ad_image[:type].include?('Image')) }

      - if ad_image[:id]
        .image-card__footer
          button.btn.btn-sm.btn-default type="button" data-action="image-card#cancelChanges"
            | Cancel
          button.btn.btn-sm.btn-danger type="button" data-user-action="delete" data-action="image-card#saveChanges"
            | Delete
          button.btn.btn-sm.btn-success type="button" data-user-action="makeDefault" data-action="image-card#saveChanges"
            | Set as default
  