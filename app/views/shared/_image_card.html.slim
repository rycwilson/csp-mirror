- _image ||= {}
- selected ||= false
- required ||= false
- collection ||= _image[:type]&.split(/(?=[A-Z])/)&.last&.downcase&.pluralize
- is_company_ad_image = form_ctrl == 'ads'
- is_default_company_ad_image = is_company_ad_image && _image[:default]
- is_ad_image = form_ctrl.nil?
- is_user_photo = form_ctrl == 'user-profile'
- is_company_logo = form_ctrl == 'company-profile'
- is_customer_logo = form_ctrl == 'customer'
- upload_enabled = local_assigns.fetch(:upload_enabled, true)
- size_validation_enabled = upload_enabled && !is_customer_logo
- image_replaceable = is_user_photo || is_company_logo || is_customer_logo || (is_company_ad_image && _image[:default])
- image_exists = _image[:image_url].present? || _image[:url].present? 

= content_tag( \
    (is_user_photo or is_customer_logo) ? :div : :li,
    class: [ \
      'image-card',
      { "image-card--#{_image[:type]}" => _image[:type].present? },
      { 'gads-required' => is_company_ad_image && _image[:type]&.include?('Image') },
      { 'gads-default' => is_company_ad_image && _image[:default] },
      { hidden: is_company_ad_image && _image.blank? },
      { selected: }],
    data: { \
      image_id: _image[:id],
      controller: 'image-card',
      image_card_kind_value: _image[:type],
      image_card_ads_outlet: ('#gads-form' if is_company_ad_image),
      ads_target: (( \
        _image[:default] ? \
          'defaultImageCard' : \
          (_image[:id] ? 'imageCard' : "new#{collection.singularize.capitalize}Card")) if is_company_ad_image),
      image_card_user_profile_outlet: ('#user-profile-form' if is_user_photo),
      image_card_company_profile_outlet: ('#company-profile-form' if is_company_logo),
      image_card_customer_outlet: ('#customer-form' if is_customer_logo),
      action: ('click->image-card#toggleSelected' if is_ad_image) }) do

  = render('shared/loading_spinner') if upload_enabled

  - if is_customer_logo
    .customer-name 
      span = customer_name

  - if is_company_logo 
    = hidden_field_tag( \
        "company[#{_image[:type].split(/(?=[A-Z])/)&.join('_').downcase}_url]",
        _image[:url],
        disabled: true,
        data: { image_card_target: 'input urlInput' })
  
  - elsif is_user_photo
    = hidden_field_tag( \
        "user[photo_url]",
        _image[:url],
        disabled: true,
        data: { image_card_target: 'input urlInput' })

  - elsif is_customer_logo
    = hidden_field_tag( \
        "customer[logo_url]",
        _image[:url],
        disabled: true,
        data: { image_card_target: 'input urlInput' })

  - elsif is_ad_image
    = check_box_tag( \
        'adwords_ad[adwords_image_ids][]',
        _image[:id],
        selected,
        { class: 'hidden', data: { image_card_target: 'adImageCheckbox' } })
    .image-card__frame
      .thumbnail
        img src=_image[:image_url] alt="#{_image[:type].split(/(?=[A-Z])/)&.join(' ')}"
        .check
          div
            div
            span.fa-stack.fa-lg
              i.fa.fa-circle-o.fa-stack-2x
              i.fa.fa-check.fa-stack-1x

  - elsif is_company_ad_image

    // new image
    - if _image[:id].blank?
      = hidden_field_tag( \
          "#{field_name_prefix}[type]",
          is_default_company_ad_image ? _image[:type] : '',
          disabled: true,
          data: { image_card_target: 'input' })
      = hidden_field_tag( \
          "#{field_name_prefix}[image_url]",
          '',
          disabled: true,
          data: { image_card_target: 'input urlInput' })
      - if is_default_company_ad_image
        = hidden_field_tag( \
            "#{field_name_prefix}[default]",
            true,
            disabled: true,
            data: { image_card_target: 'input defaultInput' })

    // existing image
    - else
      = hidden_field_tag( \
          "#{field_name_prefix}[id]",
          _image[:id],
          disabled: true,
          data: { image_card_target: 'input idInput' })
      = hidden_field_tag( \
          "#{field_name_prefix}[default]",
          _image[:default],
          disabled: true,
          data: { image_card_target: 'input defaultInput' })
      - if is_default_company_ad_image
        = hidden_field_tag( \
            "#{field_name_prefix}[type]",
            _image[:type],
            disabled: true,
            data: { image_card_target: 'input' })
        = hidden_field_tag( \
            "#{field_name_prefix}[image_url]",
            _image[:image_url],
            disabled: true,
            data: { image_card_target: 'input urlInput' })
      - else
        = hidden_field_tag( \
            "#{field_name_prefix}[_destroy]",
            false,
            disabled: true,
            data: { image_card_target: 'input _destroyInput' })
    
  - unless is_ad_image

    .form-group.fileinput {
      class="fileinput-#{image_exists ? 'exists' : 'new'}" 
      data-provides="fileinput" 
      data-image-card-target="formGroup" }

      .image-card__header
        - if upload_enabled
          / attaching data-trigger attribute to .fileinput-preview does not work
          button type="button" data-trigger="fileinput"
            i.fa.fa-fw class="fa-#{is_user_photo ? 'camera' : 'upload'}"
        - elsif is_company_ad_image && _image[:id].present? && !_image[:default]
          button.make-default type="button" data-action="image-card#makeDefault"
            i.fa.fa-fw.fa-refresh
          |&nbsp;
          button.btn-remove type="button" data-action="image-card#deleteImage"
            i.fa.fa-fw.fa-remove
        |&nbsp;
        button.btn-remove type="button" data-dismiss="fileinput"
          i.fa.fa-fw.fa-remove

      .image-card__frame
        .image-card__errors
          i.fa.fa-warning
          .help-block.with-errors
        - if image_replaceable
          .fileinput-new.thumbnail
            img {
              src="#{_image[:type].present? ? sized_image_placeholder(_image[:type]) : (is_user_photo ? asset_url('placeholders/user-photo-missing.png') : asset_url(LOGO_PLACEHOLDER))}" 
              alt="#{_image[:type]&.split(/(?=[A-Z])/)&.join(' ')}" }
          .fileinput-preview.fileinput-exists.thumbnail data-image-card-target="preview"
            - if image_exists
              img src="#{_image[:image_url] || _image[:url]}" alt="#{_image[:type]&.split(/(?=[A-Z])/)&.join(' ')}"
        
        / only non-default company ad images are not replaceable
        - elsif _image[:image_url].present?
          .thumbnail
            img src=_image[:image_url] alt="#{_image[:type]&.split(/(?=[A-Z])/)&.join(' ')}"
        - else
          .fileinput-preview.fileinput-exists.thumbnail data-image-card-target="preview"
        .btn-file
          input {
            type="file"
            accept="image/jpeg,image/png"
            data-image-card-target="fileInput"
            data-s3=(s3_direct_post.to_json if upload_enabled)
            data-validate="false"
            data-collection=collection
            data-max-file-size="5242880" 
            data-min-dimensions=(ad_image_min_dimensions.to_json unless is_user_photo || is_customer_logo)
            data-aspect-ratio-tolerance=RESPONSIVE_AD_ASPECT_RATIO_TOLERANCE
            data-required-image=('true' if required) }

      - if is_company_ad_image && _image[:id].present? && !_image[:default]
        .image-card__footer
          button.btn.btn-sm.btn-default type="button" data-action="image-card#cancelChanges"
            | Cancel
          button.btn.btn-sm.btn-danger type="button" data-user-action="delete" data-action="image-card#saveChanges"
            | Delete
          button.btn.btn-sm.btn-success type="button" data-user-action="makeDefault" data-action="image-card#saveChanges"
            | Make default

