.search-and-filters.visible-md-block.visible-lg-block {
  class=('has-combined-results' if filters.length > 1)
  data-stories-target="searchAndFilters" }

  = render('stories/shared/search_form', { company:, is_dashboard: })

  - if is_dashboard
    .filter-controls
      div data-action="change->stories#onChangeFilterMatchType"
        | Match:&nbsp;&nbsp;&nbsp;
        label.radio-inline for="match-all"
          input {
            type="radio" 
            name="match-type" 
            id="match-all" 
            value="all" 
            checked=('true' if filters_match_type == 'all')
            data-stories-target="matchTypeInput" }
            | all
        label.radio-inline for="match-any"
          input {
            type="radio" 
            name="match-type" 
            id="match-any" 
            value="any" 
            checked=('true' if filters_match_type == 'any') 
            data-stories-target="matchTypeInput" }
            | any
      a href="javascript:;" data-action="stories#clearFilters" 
        | Clear all 
      
  .stories-filter__results--combined.bg-info
    span 
      | Applied Filters:
    span data-stories-target="filterResults"

  div data-action="#{%w(curator status customer category product).map do |filter| \
    "tomselect:change-#{filter}->stories#onChangeFilter"; end.join(' ') }"

    - if is_dashboard 
      .stories-filter.form-group
        = label_tag('select-curator--stories', 'Curator')
        = select_tag( \
            nil,
            options_from_collection_for_select( \
              company.curators, :id, :curator_name_with_stories_count, filters[:curator]),
            { id: 'select-curator--stories',
              include_blank: true,
              placeholder: 'Select',
              class: 'form-control',
              data: { \
                controller: 'tomselect', 
                tomselect_type_value: 'curator', 
                stories_target: 'filterSelect' } })

      .stories-filter.form-group
        = label_tag('select-status--stories', 'Status')
        = select_tag( \
            nil,
            options_for_select( \
              Story.status_news.map { |k, v| k == 'is_published' ? \
                ["Published (#{company.stories.is_published.count})", v] : \
                ["#{k.capitalize} (#{company.stories.send(k).count})", v] }, 
              filters[:status]),
            { id:'select-status--stories', 
              include_blank: true, 
              placeholder: 'Select',
              class: 'form-control', 
              data: { \
                controller: 'tomselect',
                tomselect_type_value: 'status',
                stories_target: 'filterSelect' } })
        
      .stories-filter.form-group
        = label_tag('select-customer--stories', 'Customer')
        = select_tag( \
            nil,
            options_from_collection_for_select( \
              company.customers.order(:name), :id, :name_with_stories_count, filters[:customer]),
            { id: 'select-customer--stories',
              include_blank: true,
              placeholder: 'Select',
              class: 'form-control',
              data: { \
                controller: 'tomselect',
                tomselect_type_value: 'customer',
                stories_target: 'filterSelect' } })

    - if is_dashboard || company.story_categories.featured.present?
      .stories-filter.form-group
        = label_tag('select-category--stories', 'Category')
        = select_tag( \
            nil,
            options_from_collection_for_select( \
              company.story_categories.order(:name), :id, :name_with_stories_count, filters[:category]),
            { id: 'select-category--stories',
              include_blank: true,
              placeholder: 'Select',
              class: 'stories-filter__select stories-filter__select--category',
              data: { \
                controller: 'tomselect',
                tomselect_type_value: 'category',
                stories_target: 'filterSelect' } })

    - if is_dashboard || company.products.featured.present?
      .stories-filter.form-group
        = label_tag('select-product--stories', 'Product')
        = select_tag( \
            nil,
            options_from_collection_for_select( \
              company.products.order(:name), :id, :name_with_stories_count, filters[:product]),
            { id: 'select-product--stories',
              include_blank: true,
              placeholder: 'Select',
              class: 'stories-filter__select stories-filter__select--product',
              data: { \
                controller: 'tomselect',
                tomselect_type_value: 'product',
                stories_target: 'filterSelect' } })