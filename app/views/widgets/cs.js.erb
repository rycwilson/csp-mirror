
(function (window, document) {

  "use strict";

  var $; // localize jquery

  if (window.jQuery === undefined || jQueryIsOld(window.jQuery.fn.jquery)) {
    createScriptTag("https://ajax.googleapis.com/ajax/libs/jquery/1.12.3/jquery.min.js",
      function () {
        $ = window.jQuery.noConflict(true);
        main();
      });
  } else {
    $ = window.jQuery;
    main();
  }

  function main () {

    $(function () {

      var type = '<%= @type %>',
          $container, $script,
          $stylesheet = $("<link>", { rel: "stylesheet", type: "text/css", href: '<%= @stylesheet_url %>' });

      // no stylesheet means type couldn't be id'ed => fatal
      if (!'<%= @stylesheet_url %>') return false;

      // type IN ['gallery', 'carousel', 'fixed_carousel']
      if (type === 'gallery') {
        $script = $('script[src*="gallery/cs"]');
        $container = $('#cs-gallery');
      } else if (type === 'carousel') {
        $script = $('script[src*="carousel/cs"], script[src*="varmour/cs"]').first();
        $container = $("#cs-carousel, #cs-varmour-container").first();
      } else if (type === 'fixed_carousel') {
        $script = $('script[src*="fixed-carousel/cs"], script[src*="tab/cs"], script[src*="widget/cs"]').first();
        $container = $("#cs-fixed-carousel, #cs-tab-container, #cs-container").first();
      }

      // get font awesome if it doesn't exist on host
      $("<link>", {
        rel: "stylesheet",
        type: "text/css",
        href: "https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css"
      }).appendTo('head');

      // reset the css (none of this works with weebly, gah!)
      // ref: https://stackoverflow.com/questions/15901030/reset-remove-css-styles-for-element-only
      //
      // $container.css('all', 'initial');
      // $container.find('*').css('all', 'unset');
      //
      // $container.css('all', 'revert');

      // wait for stylesheet to load ...
      $stylesheet.appendTo('head')
        .on('load', getWidget($container, $script));

    });
  }

  // root_url provides a company-specific url (via subdomain)
  function getWidget ($container, $script, category, product) {
    return function () {
      $.ajax({
        url: "<%= URI.join(root_url, widget_view_path(@type)) %>",
        method: 'GET',
        dataType: 'jsonp',
        data: {
          category: $script.data('category'),
          product: $script.data('product')
        }
      })
        .done(function (data) {
          $container.html(data.html);
          adjustForWeebly();

          // wait for all images to load so dimension calculations are correct
          var $images = $container.find('img'), loadedImages = 0;
          $images.on('load', function () {
            if (++loadedImages === $images.length) {
              initWidget('<%= @type %>', $container, $script);
            }
          });
        });
    };
  }

  function initWidget (type, $container, $script) {
    var Modernizr, // will be defined in cs_overlays.js
        initVideo = $.Deferred(),
        initOverlays = $.Deferred();

    trackVisitor($container);

    // do not apply overlays to varmour
    if ($script.attr('src').includes('varmour')) {
      initVideo.resolve();
      initOverlays.resolve();
    } else {
      $.getScript("<%= asset_url('widgets/cs_video.js') %>", function () {
          initVideo.resolve();
        });
      $.getScript("<%= asset_url('widgets/cs_overlays.js') %>", function () {
          cspInitOverlays($, $container);
          initOverlays.resolve();
        });
    }

    $.when(initVideo, initOverlays).done(function () {
        $.ajax({
          url: "<%= URI.join(root_url, widget_init_path(@type)) %>",
          method: 'GET',
          dataType: 'script'
        })
          .done(function () {
            if (type === 'gallery') cspInitGallery($, $container);
            else if (type === 'carousel') cspInitCarousel($, $container);
            else if (type == 'fixed_carousel') {
              // plugin must be defined and called in this scope
              slideDrawerPlugin($container);
              cspInitFixedCarousel($, $container);
            }
          });
      });
  }

  // on weebly, get the Montserrat font to emulate proxima-nova
  function adjustForWeebly () {
    if (window.location.href.includes('weebly')) {
      $('.wsite-section-content > .container').css('padding', '0');
      $('#wsite-content p').each(function () {
        $(this)[0].style.setProperty('color', '#444', 'important');
      });
    }
  }

  function trackVisitor ($container) {
    if (<%= ENV['HOST_NAME'] == 'customerstories.net' %>) {
      $container.append(
          '<iframe class="cs-iframe" height="0" width="0" style="display:none" ' +
              'src="https://' + '<%= @company.subdomain %>' + '.customerstories.net/widgets/track"></iframe>'
        );

      // old approach:
      // var trackingDoc = $('#cs-container').find('iframe')[0].contentWindow.document,
      //     trackingHost = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "http://a.adroll.com"),
      //     trackingUrl = trackingHost + '/j/roundtrip.js';
      // trackingDoc.open();
      // trackingDoc.write("<html><head><script>adroll_adv_id='" + advId + "';adroll_pix_id='" + pixId + "';</script><script src='" + trackingUrl + "'></script><script>setTimeout(function(){try{__adroll.record_user({'adroll_segments':'" + segmentId + "'})}catch(err){};},1000);</script></head></html>");
      // trackingDoc.close();
    }
  }

  function slideDrawerPlugin ($container) {

    /**
     * there are two headers: visible-xs-block and hidden-xs
     * for auto-show behavior, the click event will be triggered on all headers, including the hidden ones.
     * below two functions ensure only one toggle happens
     */
    var isXsWidgetAndScreen = function ($clickTarget) {
          var parent = $clickTarget.parent(),
              screenWidth = parseInt($clickTarget.closest('.cs-row').css('width'), 10);
          if (screenWidth <= 767 && parent.hasClass('visible-xs-block')) {
            return true;
          } else {
            return false;
          }
        },
        isSmWidgetAndScreen = function ($clickTarget) {
          var parent = $clickTarget.parent(),
              screenWidth = parseInt($clickTarget.closest('.cs-row').css('width'), 10);
          if (screenWidth > 767 && parent.hasClass('hidden-xs')) {
            return true;
          } else {
            return false;
          }
        };

    var drawer = {

      init: function (options, div) {

        if (options.showDrawer === true && options.slideTimeout === true) {
          setTimeout(function() {
            drawer.slide(div, options.drawerHiddenHeight, options.slideSpeed);
          }, options.slideTimeoutCount);
        } else if (options.showDrawer === 'slide') {
          // Set drawer hidden with slide effect
          drawer.slide(div, options.drawerHiddenHeight, options.slideSpeed);
        } else if (options.showDrawer === false) {
          // Set drawer to hide
          drawer.hide(options, div);
        }
        $container.on('click', '.cs-header:not([class*="remove"])', function () {
          if ( isXsWidgetAndScreen($(this)) ) {
            drawer.toggle(options, div);
          } else if ( isSmWidgetAndScreen($(this)) ) {
            drawer.toggle(options, div);
          }
        });
      },
      toggle: function (options, div) {
        ($(div).height() + options.borderHeight === options.drawerHeight) ?
          drawer.slide( div, options.drawerHiddenHeight, options.slideSpeed ) :
          drawer.slide( div, options.drawerHeight - options.borderHeight, options.slideSpeed );
      },
      slide: function (div, height, speed, userClicked) {
        $(div).animate({ 'height': height }, speed, 'swing', function () {
          $container.find('.cs-header i[class*="fa-chevron"]').toggle();
          $container.find('header').toggleClass('open closed');
        });
      },
      hide: function (options, div) {
        $(div).css('height', options.drawerHiddenHeight);
      },

    };

    // Function wrapper
    $.fn.slideDrawer = function (options) {

      var $drawerContent = $container.find('.cs-drawer-content'),  /* Content height of drawer */
          borderHeight = parseInt($drawerContent.css('border-top-width')); /* Border height of content */

      var drawerHeight = this.height() + borderHeight; /* Total drawer height + border height */
      var drawerContentHeight = $drawerContent.outerHeight(); //- borderHeight; /* Total drawer content height minus border top */
      var drawerHiddenHeight = (drawerHeight - drawerContentHeight) - borderHeight; /* How much to hide the drawer, total height minus content height */
      var defaults = {
        showDrawer: 'slide', /* Drawer hidden on load by default, options (true, false, slide) */
        slideSpeed: 700, /* Slide drawer speed 3 secs by default */
        slideTimeout: true, /* Sets time out if set to true showDrawer false will be ignored */
        slideTimeoutCount: 5000, /* How long to wait before sliding drawer */
        drawerContentHeight: drawerContentHeight, /* Div content height no including tab or border */
        drawerHeight: drawerHeight, /* Full div height */
        drawerHiddenHeight: drawerHiddenHeight, /* Height of div when hidden full height minus content height */
        borderHeight: borderHeight /* border height if set in css you cann overwrite but best just leave alone */
      };

      /* Overwrite defaults */
      var pluginOptions = $.extend(defaults, options);

      return this.each(function () {
        drawer.init(pluginOptions, this);
      });
    };

  }

  function createScriptTag (url, callback) {
    var scriptTag = document.createElement('script');
    scriptTag.setAttribute("type", "text/javascript");
    scriptTag.setAttribute("src", url);
    if (typeof callback !== "undefined") {
      if (scriptTag.readyState) {
        /* For old versions of IE */
        scriptTag.onreadystatechange = function () {
          if (this.readyState === 'complete' || this.readyState === 'loaded') {
            callback();
          }
        };
      } else {
        scriptTag.onload = callback;
      }
    }
    (document.getElementsByTagName("head")[0] || document.documentElement).appendChild(scriptTag);
  }

  // bootstrap requires >= v1.9 of jquery
  function jQueryIsOld (jqVer) {
    var majorRel = jqVer.split('.')[0],
        minorRel = jqVer.split('.')[1];
    if (majorRel === '1' && parseInt(minorRel, 10) < 9) {
      return true;
    } else {
      return false;
    }
  }


}(window, document));

