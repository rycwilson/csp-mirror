
(function () {

  var res = <%= raw @response_data.to_json %>,
      errors = <%= raw @errors.to_json %>,
      $form = $('#gads-images-form'),
      $submitBtn = $form.find('button[type="submit"][data-submitted="true"]'),
      $formGroup = $submitBtn.closest('.form-group'),
      $thisList = $formGroup.closest('ul'),
      imageType = (res.newImage || res.swappedDefaultImage) &&
                  (res.newImage || res.swappedDefaultImage).type,
      $defaultImageCard = imageType && $('.gads-default').has('input[name*="[type]"][value="' + imageType + '"]'),
      $swappedImageCard = res.swappedDefaultImage && $formGroup.closest('.ad-image-card'),
      $modal = $('#ads-images-modal'),
      modalImageTemplate = res.newImage && (
        '<li class="' + res.imageClassName + '" data-image-id="' + res.newImage.id + '">' +
          '<img src="' + res.newImage.image_url + '" alt="marketing image">' +
          '<div class="check">' +
            '<div>' +
              '<div></div>' +
              '<span class="fa-stack fa-lg">' +
              '<i class="fa fa-circle-o fa-stack-2x"></i>' +
              '<i class="fa fa-check fa-stack-1x"></i>' +
            '</div>' +
          '</div>' +
        '</li>'
      ),
      reEnableAllInputs = function () {
        var isCompanyInput = function (index, input) {
              return input.name.match(/company\[\w+\]/);
            };
        $form.find('input').filter(isCompanyInput).prop('disabled', false);
      },
      updateImageCard = function ($imageCard, image) {
        $imageCard
          .find('input[name*="[id]"]').val(image.id).end()
          .find('input[name*="[image_url]"]:not([type="file"])').val(image.image_url).end()
          .find('img').attr('src', image.image_url);
        if ($imageCard.is('.gads-default')) {
          // the data attribute is useful for styling (e.g. required image is present or missing),
          // and also logical checks to see if the default image actually exists
          // (the image that's there may be a placeholder)
          $imageCard.find('input:checkbox[name*="[default]"]').prop('checked', true).end()
                    .attr('data-image-url', image.image_url)
        } else {
          $imageCard.find('input:checkbox[name*="[default]"]').prop('checked', false);
        }
      },
      customizeErrorMessages = function (errors) {
        return errors.map(function (mesg) {
          if (mesg === "Adwords images media can't be blank") {
            return "Error uploading to service";
          } else if (mesg === "Adwords images image_url can't be blank") {
            return "Error uploading file";
          }
        })
      },
      movePrevDefaultToList = function (prevDefault) {
        var $otherList = $('.image-library').find('ul').not($thisList),
            typeClassNameLookup = {
              'SquareImage': 'gads-image gads-image--square',
              'LandscapeImage': 'gads-image gads-image--landscape',
              'SquareLogo': 'gads-logo gads-logo--square',
              'LandscapeLogo': 'gads-logo gads-logo--landscape'
            };
        $.when(
            $thisList.append(
              _.template($('#ad-image-card-template').html())({
                id: prevDefault.id,
                type: prevDefault.type,
                typeClassName: typeClassNameLookup[prevDefault.type],
                imageIndex: $thisList.children('li').length + $otherList.children('li').length,
                imageUrl: prevDefault.image_url
              })
            )
          )
          .done(function () {
            $thisList.children().last().removeClass('new-ad-image hidden');
            $('#previous-default-hidden-inputs').remove();
          })
      };

  console.log('errors', errors)
  console.log('res', res)

  if (errors) {
    errors = customizeErrorMessages(errors);
    $formGroup.removeClass('to-be-added has-success').addClass('has-error')
              .find('.help-block').text(errors[0]);
  }

  /**
   *  scenarios 1, 2: new image without a previous default
   *  => behavior is same whether (1) uploaded as default or (2) uploaded to the list
   */
  if (res.newImage && !res.prevDefaultImage) {
    updateImageCard($formGroup.closest('.ad-image-card'), res.newImage);
    toggleFormDone($form, true, function () {
        $formGroup.removeClass('to-be-added');
      }, $submitBtn);

  /**
   *  scenarios 3, 4: new image replaced a previous default
   *  3: new image uploaded to the list and swapped in
   *  4: new image uploaded directly over previous
   */
  } else if (res.newImage && res.prevDefaultImage) {
    if (res.swappedDefaultImage) {
      $swappedImageCard.remove();
      updateImageCard($defaultImageCard, res.swappedDefaultImage);
      $form.attr('data-submitted', '');
    } else {
      updateImageCard($defaultImageCard, res.newImage);
      toggleFormDone($form, true, function () {
          $formGroup.removeClass('to-be-added');
        }, $submitBtn);
    }
    $defaultImageCard[0].scrollIntoView({ block: 'center', behavior: 'smooth' });
    movePrevDefaultToList(res.prevDefaultImage);

  /**
   *  scenario 5: existing image swapped in as new default
   */
  } else if (!res.newImage && res.swappedDefaultImage) {
    $swappedImageCard.remove();
    updateImageCard($defaultImageCard, res.swappedDefaultImage);
    $defaultImageCard[0].scrollIntoView({ block: 'center', behavior: 'smooth' });
    if (res.prevDefaultImage) movePrevDefaultToList(res.prevDefaultImage);
    $form.attr('data-submitted', '');

  /**
   *  removed image
   */
  } else if (res.removedImageId) {
    $modal.find('li[data-image-id="' + res.removedImageId + '"]').remove();
    $form.attr('data-submitted', '');
    $('#promoted-stories-table').DataTable().ajax.reload();

  } else {
    toggleFormDone($form, true, function () {
          $formGroup.removeClass('to-be-added');
          $submitBtn.hide();
        }, $submitBtn);
  }

  /**
   *  images with user-confirmed removal
   */
  if ($('.bootbox.confirm-ad-image-removal').length) {
    $('.bootbox.confirm-ad-image-removal').one('hidden.bs.modal', function () {
      $('.ad-image-card').has('[name*="[id]"][value="' + res.removedImageId + '"]')
                           .remove();
    });
    $('.bootbox.confirm-ad-image-removal').modal('hide');
  }

  /**
   *  cleanup
   */
  reEnableAllInputs();
  if (res.newImage) {
    $modal.find(res.newImage.type.includes('Image') ? 'ul.marketing' : 'ul.logos')
            .append(modalImageTemplate)
  }

}());