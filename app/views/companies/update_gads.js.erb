(() => {
  const { 
    savedImage,
    swappedDefaultImageId, 
    prevDefaultImageId, 
    collection,
    imageType,
    typeClassName,
    removedImageId } = <%= raw @res_data.to_json %>;
  const errors = <%= raw @errors.to_json %>;
  const $list = imageType && $(`.image-library__all-${collection}`);
  const $form = $('#gads-form');
  const $modal = $('#ads-images-modal');
  const $defaultImageCard = imageType && $form.find(`.gads-default[class*="${typeClassName}"]`);
  const $swappedImageCard = swappedDefaultImageId && 
    $form.find('.ad-image-card').has(`> input[name*="[id]"][value="${swappedDefaultImageId}"]`);
    
  const customizeErrorMessages = (errors) => errors.map(mesg => {
    if (mesg === "Adwords images media can't be blank") {
      return 'Error uploading to service';
    } else if (mesg === "Adwords images image_url can't be blank") {
      return 'Error uploading file';
    } else {
      return 'Unknown error';
    }
  });

  const updateIndices = () => (
    $form.find('.ad-image-card').each((i, imageCard) => (
      $(imageCard).children('input').each((j, input) => (
        $(input).attr('name', $(input).attr('name').replace(/\[(\d+|\?)\]/, `[${i}]`))
      ))
    ))
  );

  // remove any hidden inputs that captured the previous default image
  $form.children('input[name*="adwords_images_attributes"]').remove();

  if (errors) {
    errors = customizeErrorMessages(errors);
    $formGroup.removeClass('has-success').addClass('has-error')
              .find('.help-block').text(errors[0]);
  }

  // image was uploaded (default or list)
  if (savedImage) {
    if (savedImage.default) {
      $defaultImageCard.replaceWith(`<%= @saved_image.try(:[], :default) ? j(@saved_image_card) : nil %>`)
      if (prevDefaultImageId) {
        $list.children().first()
          .after(`<%= @saved_image && @prev_default_image ? j(@prev_default_image_card) : nil %>`)
      }
    } else {
      $list.children().first()
        .after(`<%= @saved_image.try(:[], :default) ? nil : j(@saved_image_card) %>`)
        .replaceWith(`<%= j @new_image_card %>`)
    }
    $modal
      .find(imageType.includes('Logo') ? 'ul.ad-logo-selections' : 'ul.ad-image-selections')
        .append(`<%= @saved_image.present? ? j(@modal_image_card) : nil %>`)

  // existing image was set as new default
  } else if (swappedDefaultImageId) { 
    $defaultImageCard.replaceWith(`<%= @swapped_default_image ? j(@swapped_default_image_card) : nil %>`);
    $list.children().first().after(`<%= @swapped_default_image ? j(@prev_default_image_card) : nil %>`);
    $swappedImageCard.remove();
    $form
      .find(`.gads-default[class*="${typeClassName}"]`)
        .addClass('ad-image-card--did-save')
        .get(0).scrollIntoView({ block: 'center' });

  // image was removed
  } else if (removedImageId) {
    $modal.find(`li[data-image-id="${removedImageId}"]`).remove();
    $form.attr('data-submitted', '');
    console.log('reloading data table...')
    $('#promoted-stories-table').DataTable().ajax.reload();

  } else {
    console.error('something went wrong')
  }

  setTimeout(updateIndices);
  setTimeout(() => $('.ad-image-card--did-save').removeClass('ad-image-card--did-save'), 3000);

  /**
   *  images with user-confirmed removal
   */
  if ($('.bootbox.confirm-ad-image-removal').length) {
    $('.bootbox.confirm-ad-image-removal')
      .one(
        'hidden.bs.modal', 
        () => (
          $('.ad-image-card')
            .has(`[name*="[id]"][value="${removedImageId}"]`)
            .remove()
        )
      );
    $('.bootbox.confirm-ad-image-removal').modal('hide');
  }
})()